name: Build and Release Desktop Applications

on:
  push:
    tags:
      - 'v*.*.*'  # Trigger on version tags like v1.0.0, v2.1.3, etc.

jobs:
  build-employee-tracker:
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'macos-latest'
            args: '--target universal-apple-darwin'
          - platform: 'windows-latest'
            args: ''

    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies (Ubuntu only)
        if: matrix.platform == 'ubuntu-20.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: employee-tracker-tauri/package-lock.json

      - name: Install Tauri CLI
        run: npm install -g @tauri-apps/cli@^1.5.0

      - name: Install frontend dependencies
        run: npm install
        working-directory: ./employee-tracker-tauri

      - name: Build the app
        run: npm run tauri build -- ${{ matrix.args }}
        working-directory: ./employee-tracker-tauri
        env:
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}

      - name: Upload macOS artifacts
        if: matrix.platform == 'macos-latest'
        uses: actions/upload-artifact@v4
        with:
          name: employee-tracker-macos
          path: |
            employee-tracker-tauri/src-tauri/target/universal-apple-darwin/release/bundle/dmg/*.dmg
            employee-tracker-tauri/src-tauri/target/universal-apple-darwin/release/bundle/macos/*.app

      - name: Upload Windows artifacts
        if: matrix.platform == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: employee-tracker-windows
          path: |
            employee-tracker-tauri/src-tauri/target/release/bundle/msi/*.msi
            employee-tracker-tauri/src-tauri/target/release/bundle/nsis/*.exe

  build-manager-dashboard:
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'macos-latest'
            args: '--target universal-apple-darwin'
          - platform: 'windows-latest'
            args: ''

    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies (Ubuntu only)
        if: matrix.platform == 'ubuntu-20.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: manager-dashboard-tauri/package-lock.json

      - name: Install Tauri CLI
        run: npm install -g @tauri-apps/cli@^1.5.0

      - name: Install frontend dependencies
        run: npm install
        working-directory: ./manager-dashboard-tauri

      - name: Build the app
        run: npm run tauri build -- ${{ matrix.args }}
        working-directory: ./manager-dashboard-tauri
        env:
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}

      - name: Upload macOS artifacts
        if: matrix.platform == 'macos-latest'
        uses: actions/upload-artifact@v4
        with:
          name: manager-dashboard-macos
          path: |
            manager-dashboard-tauri/src-tauri/target/universal-apple-darwin/release/bundle/dmg/*.dmg
            manager-dashboard-tauri/src-tauri/target/universal-apple-darwin/release/bundle/macos/*.app

      - name: Upload Windows artifacts
        if: matrix.platform == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: manager-dashboard-windows
          path: |
            manager-dashboard-tauri/src-tauri/target/release/bundle/msi/*.msi
            manager-dashboard-tauri/src-tauri/target/release/bundle/nsis/*.exe

  create-release:
    needs: [build-employee-tracker, build-manager-dashboard]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4

      - name: Display structure of downloaded files
        run: ls -la

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: ProductivityFlow ${{ github.ref_name }}
          body: |
            ## ProductivityFlow Desktop Applications - ${{ github.ref_name }}
            
            ### 📦 What's Included
            - **Employee Tracker** - Time tracking application for employees
            - **Manager Dashboard** - Analytics and management interface for managers
            
            ### 🖥️ Supported Platforms
            - **macOS** - Universal binary supporting both Intel and Apple Silicon
            - **Windows** - MSI installer and NSIS executable
            
            ### 📋 Installation Instructions
            
            #### macOS
            1. Download the `.dmg` file for your application
            2. Open the downloaded file
            3. Drag the application to your Applications folder
            4. Launch the application
            
            #### Windows
            1. Download the `.msi` file for your application
            2. Run the installer as administrator
            3. Follow the installation wizard
            4. Launch the application from Start Menu
            
            ### 🔧 Backend Configuration
            The applications are pre-configured to connect to: `https://productivityflow-backend-v3.onrender.com`
            
            ### 🧪 Testing
            Use the developer codes provided in the repository's DEVELOPER_CODES.md file for testing.
            
            ---
            **Full setup instructions and documentation available in the repository README.md**
          draft: false
          prerelease: false

      - name: Upload Employee Tracker macOS DMG
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./employee-tracker-macos/ProductivityFlow Tracker_*.dmg
          asset_name: ProductivityFlow-Employee-Tracker-macOS.dmg
          asset_content_type: application/octet-stream

      - name: Upload Employee Tracker Windows MSI
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./employee-tracker-windows/ProductivityFlow Tracker_*.msi
          asset_name: ProductivityFlow-Employee-Tracker-Windows.msi
          asset_content_type: application/octet-stream

      - name: Upload Manager Dashboard macOS DMG
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./manager-dashboard-macos/ProductivityFlow Manager Dashboard_*.dmg
          asset_name: ProductivityFlow-Manager-Dashboard-macOS.dmg
          asset_content_type: application/octet-stream

      - name: Upload Manager Dashboard Windows MSI
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./manager-dashboard-windows/ProductivityFlow Manager Dashboard_*.msi
          asset_name: ProductivityFlow-Manager-Dashboard-Windows.msi
          asset_content_type: application/octet-stream

      - name: Generate Updater Manifests
        run: |
          # Extract version from tag
          VERSION=${GITHUB_REF#refs/tags/v}
          
          # Generate Employee Tracker manifest
          cat > latest-employee-tracker.json << EOF
          {
            "version": "$VERSION",
            "date": "$(date -u +%Y-%m-%dT%H:%M:%SZ)",
            "platforms": {
              "darwin-x86_64": {
                "signature": "",
                "url": "https://github.com/${{ github.repository }}/releases/download/v$VERSION/ProductivityFlow-Employee-Tracker-macOS.dmg"
              },
              "darwin-aarch64": {
                "signature": "",
                "url": "https://github.com/${{ github.repository }}/releases/download/v$VERSION/ProductivityFlow-Employee-Tracker-macOS.dmg"
              },
              "windows-x86_64": {
                "signature": "",
                "url": "https://github.com/${{ github.repository }}/releases/download/v$VERSION/ProductivityFlow-Employee-Tracker-Windows.msi"
              }
            },
            "body": "Latest improvements and bug fixes for Employee Tracker"
          }
          EOF
          
          # Generate Manager Dashboard manifest
          cat > latest-manager-dashboard.json << EOF
          {
            "version": "$VERSION",
            "date": "$(date -u +%Y-%m-%dT%H:%M:%SZ)",
            "platforms": {
              "darwin-x86_64": {
                "signature": "",
                "url": "https://github.com/${{ github.repository }}/releases/download/v$VERSION/ProductivityFlow-Manager-Dashboard-macOS.dmg"
              },
              "darwin-aarch64": {
                "signature": "",
                "url": "https://github.com/${{ github.repository }}/releases/download/v$VERSION/ProductivityFlow-Manager-Dashboard-macOS.dmg"
              },
              "windows-x86_64": {
                "signature": "",
                "url": "https://github.com/${{ github.repository }}/releases/download/v$VERSION/ProductivityFlow-Manager-Dashboard-Windows.msi"
              }
            },
            "body": "Latest improvements and bug fixes for Manager Dashboard"
          }
          EOF

      - name: Upload Employee Tracker Updater Manifest
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./latest-employee-tracker.json
          asset_name: latest-employee-tracker.json
          asset_content_type: application/json

      - name: Upload Manager Dashboard Updater Manifest
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./latest-manager-dashboard.json
          asset_name: latest-manager-dashboard.json
          asset_content_type: application/json